/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
	// Compile time dependency, provided by the container
    implementation 'org.eclipse.microprofile:microprofile:3.3'

    // https://mvnrepository.com/artifact/org.jboss.weld.se/weld-se-core
	implementation group: 'org.jboss.weld.se', name: 'weld-se-core', version: '3.1.6.Final'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    def junitJupiterVersion = '5.6.0'
	testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
	testImplementation "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
	    
    testImplementation 'org.jboss.weld.se:weld-se-core:3.1.4.Final'
    testImplementation 'org.jboss.weld:weld-junit5:2.0.1.Final'
    testImplementation 'org.microbean:microbean-microprofile-config:0.4.1' // to be able to use @ConfigProperty in SE container
}

application {
    // Define the main class for the application.
    mainClass = 'cdi.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
